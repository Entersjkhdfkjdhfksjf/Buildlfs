# Pkgfile for llvm

name=llvm-32
version=16.0.6
release=1
source=(https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/llvm-$version.src.tar.xz
	https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/cmake-$version.src.tar.xz
	https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/third-party-$version.src.tar.xz
	llvm-config.h)
build_opt32="
	-DLLVM_LIBDIR_SUFFIX=32
	-DCMAKE_C_FLAGS:STRING=-m32
	-DCMAKE_CXX_FLAGS:STRING=-m32
	-DLLVM_TARGET_ARCH:STRING=i686
	-DLLVM_DEFAULT_TARGET_TRIPLE='i686-pc-linux-gnu'
"
build_opt="$build_opt32
	-DLLVM_ENABLE_FFI=ON
	-DLLVM_BUILD_LLVM_DYLIB=ON
	-DLLVM_LINK_LLVM_DYLIB=ON
	-DLLVM_ENABLE_RTTI=ON
	-DLLVM_TARGETS_TO_BUILD='host;AMDGPU;BPF'
	-DLLVM_BINUTILS_INCDIR=/usr/include
	-DLLVM_INCLUDE_BENCHMARKS=OFF
	-DCLANG_DEFAULT_PIE_ON_LINUX=ON"
buildtype=cmake_build

pkg_build() {
	mv ../cmake-${version}.src .
	mv ../third-party-${version}.src .

	sed "/LLVM_COMMON_CMAKE_UTILS/s@../cmake@cmake-${version}.src@" -i CMakeLists.txt                 
	sed "/LLVM_THIRD_PARTY_DIR/s@../third-party@third-party-${version}.src@" \
		-i cmake/modules/HandleLLVMOptions.cmake

	_$buildtype $build_opt

	mv $PKG $PKG-tmp
	mkdir $PKG
}

post_build() {
	mkdir -p \
		$PKG/usr/bin \
		$PKG/usr/include/llvm/Config
	
	cp -rv $PKG-tmp/usr/lib32 $PKG/usr
	cp $PKG-tmp/usr/bin/llvm-config $PKG/usr/bin/llvm-config-32
	cp $PKG-tmp/usr/include/llvm/Config/llvm-config.h $PKG/usr/include/llvm/Config/llvm-config-32.h
}
